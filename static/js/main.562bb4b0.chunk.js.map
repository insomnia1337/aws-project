{"version":3,"sources":["components/navbar.js","components/AppliedRoute.js","components/NotFound.js","env.js","components/auth/Auth.js","components/login/SignInForm.js","components/register/SignUpForm.js","components/Home/Home.js","components/Routes.js","components/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","Navbar","props","classes","react_default","a","createElement","className","root","AppBar","position","Toolbar","isAuthenticated","Button","component","Link","to","variant","color","onClick","handleLogout","react","AppliedRoute","_ref","C","cProps","rest","Object","objectWithoutProperties","react_router","assign","render","NotFound","identityPoolId","bucketRegion","bucketName","poolData","UserPoolId","ClientId","Auth","userPool","credentials","cognitoUser","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","userName","password","_this2","Promise","resolve","reject","authenticationDetails","AuthenticationDetails","Username","Password","CognitoUser","Pool","authenticateUser","onSuccess","onFailure","data","_this3","signUp","username","CognitoUserAttribute","Name","Value","email","name","err","result","console","log","concat","user","getUsername","_this4","confirmRegistration","code","alert","identityId","getCurrentUser","signOut","React","Component","@global","body","backgroundColor","palette","common","white","paper","marginTop","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","creds","AWS","CognitoIdentityCredentials","IdentityPoolId","auth","CognitoUserPool","SignInForm","_useState","useState","_useState2","slicedToArray","login","setLogin","_useState3","_useState4","setPassword","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","preventDefault","signInUser","userHasAuthenticated","history","push","t0","stop","_x","apply","arguments","Container","maxWidth","CssBaseline","Avatar","LockOutlined_default","Typography","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","value","onChange","target","type","Grid","container","item","react_router_dom","style","textDecoration","config","update","region","SignUpForm","setEmail","_useState5","_useState6","_useState7","_useState8","password2","setPassword2","_useState9","_useState10","confirmationCode","setConfirmationCode","_useState11","_useState12","newUser","setNewUser","handleChange","event","length","abrupt","signUpUser","message","handleConfirmationSubmit","_ref2","_callee2","_context2","confirm","_x2","onSubmit","xs","justify","Home","_useDropzone","useDropzone","accept","acceptedFiles","rejectedFiles","getRootProps","getInputProps","s3","S3","apiVersion","params","Bucket","acceptedFilesItems","map","file","key","path","size","rejectedFilesItems","uuidv4","require","sendPhotos","timestamp","Date","now","promises","formData","FormData","_loop","i","acceptedFilesItem","append","putObject","Key","ContentType","Body","all","then","values","orderRequest","order_id","photos","x","fetch","method","JSON","stringify","mode","headers","Content-Type","res","text","response","Routes","childProps","exact","MadeWithLove","href","minHeight","marginBottom","footer","padding","StickyFooter","App","authenticated","setState","logOut","state","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.562bb4b0.chunk.js","sourcesContent":["import React, {Fragment} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nexport default function Navbar(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    {props.isAuthenticated ? (\r\n                        <Button\r\n                            component={Link}\r\n                            to=\"/register\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={props.handleLogout}\r\n                        >\r\n                            Logout\r\n                        </Button>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                component={Link}\r\n                                to=\"/\"\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                            <Button\r\n                                className=\"register-button\"\r\n                                component={Link}\r\n                                to=\"/register\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                        </Fragment>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\nexport default ({component: C, props: cProps, ...rest}) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            <C {...props} {...cProps} />}/>\r\n);\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            404 not Found\r\n        </div>\r\n    )\r\n}\r\n","const region = \"eu-west-1\";\r\nconst identityPoolId = \"eu-west-1:9b7fdb04-13e1-4afc-b106-28e1f8341d9b\";\r\nconst loginProviderName =\r\n  \"cognito-idp.eu-west-1.amazonaws.com/eu-west-1_BuFvMskGo\";\r\nconst bucketRegion = \"eu-central-1\"; // Frankfurt\r\nconst bucketName = \"185868\";\r\nconst poolData = {\r\n  UserPoolId: \"eu-west-1_BuFvMskGo\",\r\n  ClientId: \"60e0k1u4i8cvf943j9rp80532c\"\r\n};\r\nconst animationApiGatewayUrl = '';\r\n\r\nexport {\r\n  region,\r\n  identityPoolId,\r\n  loginProviderName,\r\n  poolData,\r\n  bucketRegion,\r\n  bucketName,\r\n  animationApiGatewayUrl\r\n};\r\n","import {\r\n    AuthenticationDetails,\r\n    CognitoUser,\r\n    CognitoUserAttribute\r\n} from \"amazon-cognito-identity-js\";\r\nimport React from \"react\";\r\n\r\nexport default class Auth extends React.Component {\r\n    constructor(userPool, credentials, cognitoUser) {\r\n        super();\r\n        this.cognitoUser = cognitoUser;\r\n        this.userPool = userPool;\r\n        this.credentials = credentials;\r\n    }\r\n\r\n    signInUser(userName, password) {\r\n        return new Promise((resolve, reject) => {\r\n            const authenticationDetails = new AuthenticationDetails({\r\n                Username: userName,\r\n                Password: password\r\n            });\r\n\r\n            const cognitoUser = new CognitoUser({\r\n                Username: userName,\r\n                Pool: this.userPool\r\n            });\r\n\r\n            cognitoUser.authenticateUser(authenticationDetails, {\r\n                onSuccess: resolve,\r\n                onFailure: reject\r\n            });\r\n        });\r\n    }\r\n\r\n    signUpUser(data) {\r\n        return new Promise((resolve, reject) => {\r\n            debugger;\r\n            this.userPool.signUp(\r\n                data.username,\r\n                data.password,\r\n                [\r\n                    new CognitoUserAttribute({\r\n                        Name: \"email\",\r\n                        Value: data.email\r\n                    }),\r\n                    new CognitoUserAttribute({\r\n                        Name: \"name\",\r\n                        Value: data.name\r\n                    })\r\n                ],\r\n                null,\r\n                (err, result) => {\r\n                    if (err) {\r\n                        console.log(err);\r\n                        return;\r\n                    }\r\n                    resolve();\r\n                    console.log(`Udało się. Username: ${result.user.getUsername()}`);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    confirm(data) {\r\n        return new Promise((resolve, reject) => {\r\n            const cognitoUser = new CognitoUser({\r\n                Username: data.username,\r\n                Pool: this.userPool\r\n            });\r\n\r\n            cognitoUser.confirmRegistration(data.code, true, (err, result) => {\r\n                if (err) {\r\n                    console.log(err);\r\n                    alert(\"Wpisany KOD jest nie prawidłowy. Spróbuj ponownie\");\r\n                    console.log(\"Wpisany KOD jest nie prawidłowy. Spróbuj ponownie\");\r\n                    return;\r\n                }\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    getIdentityId() {\r\n        return this.credentials.identityId;\r\n    }\r\n\r\n    logOut() {\r\n        const cognitoUser = this.userPool.getCurrentUser();\r\n        if (cognitoUser != null) {\r\n            cognitoUser.signOut();\r\n        }\r\n    }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport {CognitoUserPool} from \"amazon-cognito-identity-js\";\r\nimport {poolData, identityPoolId} from \"../../env\";\r\nimport AWS from \"aws-sdk\";\r\nimport Auth from \"../auth/Auth\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    \"@global\": {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white\r\n        }\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}));\r\nconst creds = new AWS.CognitoIdentityCredentials({\r\n    IdentityPoolId: identityPoolId\r\n});\r\nconst userPool = new CognitoUserPool(poolData);\r\nconst auth = new Auth(userPool, creds);\r\n\r\nexport default function SignInForm(props) {\r\n    const classes = useStyles();\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            await auth.signInUser(login, password);\r\n            props.userHasAuthenticated(true);\r\n            props.history.push(\"/home\");\r\n            console.log(props);\r\n        } catch (e) {\r\n            props.userHasAuthenticated(false);\r\n            console.log(e);\r\n        }\r\n    };\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"login\"\r\n                        label=\"Login\"\r\n                        name=\"login\"\r\n                        autoComplete=\"login\"\r\n                        autoFocus\r\n                        value={login}\r\n                        onChange={e => setLogin(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link\r\n                                style={{textDecoration: \"none\"}}\r\n                                to=\"/register\"\r\n                                variant=\"body2\"\r\n                            >\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AWS from \"aws-sdk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Auth from \"../auth/Auth\";\r\nimport { CognitoUserPool } from \"amazon-cognito-identity-js\";\r\nimport {\r\n  poolData,\r\n  identityPoolId,\r\n  region\r\n} from \"../../env\";\r\nconst userPool = new CognitoUserPool(poolData);\r\n\r\nconst creds = new AWS.CognitoIdentityCredentials({\r\n  IdentityPoolId: identityPoolId\r\n});\r\n\r\nAWS.config.update({\r\n  region: region,\r\n  credentials: creds\r\n});\r\n\r\nconst auth = new Auth(userPool, creds);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function SignUpForm(props) {\r\n  const classes = useStyles();\r\n  const [login, setLogin] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [confirmationCode, setConfirmationCode] = useState(\"\");\r\n  const [newUser, setNewUser] = useState(\"\");\r\n\r\n  const validateForm = () => {\r\n    return login.length > 0 && password.length > 0 && password === password2;\r\n  };\r\n  const validateConfirmationForm = () => {\r\n    return confirmationCode.length > 0;\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setConfirmationCode(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (!validateForm()) {\r\n      return alert(\"Wpisane dane są niepoprawne.\");\r\n    }\r\n    try {\r\n      await auth.signUpUser({\r\n        username: login,\r\n        password: password,\r\n        email: email\r\n      });\r\n      setNewUser(\"test\");\r\n    } catch (e) {\r\n      alert(e.message);\r\n    }\r\n  };\r\n\r\n  const handleConfirmationSubmit = async event => {\r\n    event.preventDefault();\r\n    if (!validateConfirmationForm()) {\r\n      return;\r\n    }\r\n    try {\r\n     await auth.confirm({\r\n        username: login,\r\n        code: confirmationCode\r\n      });\r\n      props.history.push('/')\r\n      \r\n    } catch (event) {\r\n      console.log(event.message);\r\n    }\r\n  };\r\n\r\n  const renderConfirmationForm = () => {\r\n    return (\r\n        <Container style={{marginTop: '64px'}}component=\"main\" maxWidth=\"xs\">\r\n      <form onSubmit={handleConfirmationSubmit}>\r\n        <Grid item xs={12}>\r\n        <TextField\r\n            autoComplete=\"fname\"\r\n            name=\"Type your code\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            label=\"Type your code\"\r\n            autoFocus\r\n            value={confirmationCode}\r\n            onChange={handleChange}\r\n        />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n        <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n        >\r\n         Confirm code\r\n        </Button>\r\n        </Grid>\r\n        <div>Please check your email for the code.</div>\r\n      </form>\r\n        </Container>\r\n    );\r\n  };\r\n\r\n  const renderForm = () => {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"login\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"login\"\r\n                  label=\"Login\"\r\n                  autoFocus\r\n                  value={login}\r\n                  onChange={e => setLogin(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={email}\r\n                  onChange={e => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={password}\r\n                  onChange={e => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password2\"\r\n                  label=\"Repeat password\"\r\n                  type=\"password\"\r\n                  id=\"password2\"\r\n                  autoComplete=\"current-password\"\r\n                  value={password2}\r\n                  onChange={e => setPassword2(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  to=\"/login\"\r\n                  variant=\"body2\"\r\n                >\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"signup\">\r\n      {!newUser ? renderForm() : renderConfirmationForm()}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {useDropzone} from \"react-dropzone\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport \"./home.scss\";\r\nimport {\r\n    animationApiGatewayUrl,\r\n    bucketRegion,\r\n    bucketName,\r\n    identityPoolId,\r\n    poolData\r\n} from \"../../env\";\r\nimport AWS from \"aws-sdk\";\r\nimport {CognitoUserPool} from \"amazon-cognito-identity-js\";\r\nimport Auth from \"../auth/Auth\";\r\n\r\nconst creds = new AWS.CognitoIdentityCredentials({\r\n    IdentityPoolId: identityPoolId\r\n});\r\nconst userPool = new CognitoUserPool(poolData);\r\nconst auth = new Auth(userPool, creds);\r\n\r\nexport default function Home(props) {\r\n    const {\r\n        acceptedFiles,\r\n        rejectedFiles,\r\n        getRootProps,\r\n        getInputProps\r\n    } = useDropzone({\r\n        accept: \"image/jpeg, image/png\"\r\n    });\r\n\r\n    const s3 = new AWS.S3({\r\n        apiVersion: \"2006-03-01\",\r\n        region: bucketRegion,\r\n        params: {\r\n            Bucket: bucketName\r\n        }\r\n    });\r\n\r\n    const acceptedFilesItems = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n            {file.path} - {file.size} bytes\r\n        </li>\r\n    ));\r\n\r\n    const rejectedFilesItems = rejectedFiles.map(file => (\r\n        <li key={file.path}>\r\n            {file.path} - {file.size} bytes\r\n        </li>\r\n    ));\r\n\r\n    const uuidv4 = require(\"uuid/v4\");\r\n\r\n    const sendPhotos = e => {\r\n        e.preventDefault();\r\n        const timestamp = Date.now();\r\n        const path = `uek-krakow/${timestamp}/`;\r\n        const promises = [];\r\n        const formData = new FormData();\r\n\r\n        for (let i = 0; i < acceptedFilesItems.length; i++) {\r\n            const acceptedFilesItem = acceptedFilesItems[i];\r\n            formData.append('file', acceptedFilesItem);\r\n            promises.push(\r\n                new Promise((resolve, reject) => {\r\n                    debugger;\r\n                    s3.putObject(\r\n                        {\r\n                            Key: `${path}${acceptedFilesItem.key}`,\r\n                            ContentType: \"image/jpeg\",\r\n                            Body: formData\r\n                        },\r\n                        (err, data) => {\r\n                            if (err) {\r\n                                console.log(err);\r\n                                reject(err);\r\n                            } else {\r\n                                resolve(data);\r\n                            }\r\n                        }\r\n                    );\r\n                    resolve(\"ok\");\r\n                })\r\n            );\r\n            Promise.all(promises).then(values => {\r\n                console.log(values);\r\n                console.log(\"Pliki wyslane\");\r\n                const order_id = uuidv4();\r\n                const email = \"test@wp.pl\";\r\n                const photos = acceptedFilesItems.map(x => `${path}${x.name}`);\r\n                const orderRequest = {\r\n                    order_id,\r\n                    email,\r\n                    photos\r\n                };\r\n                console.log(orderRequest);\r\n                fetch(\"animationApiGatewayUrl\", {\r\n                    method: \"post\",\r\n                    body: JSON.stringify(orderRequest),\r\n                    mode: \"no-cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                })\r\n                    .then(res => res.text())\r\n                    .then(response => {\r\n                        console.log(\"Pliki przeslane\");\r\n                        console.log(response);\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    const blocked = () => {\r\n        return (\r\n            <Redirect to='/'/>\r\n        )\r\n    }\r\n\r\n    const homeTemplate = () => {\r\n        return (\r\n            <div>\r\n                <section className=\"container\">\r\n                    <div>\r\n                        <h1>Animation creator</h1>\r\n                        <p>Create pretty nice animations🍔🍔🍔</p>\r\n                    </div>\r\n                    <div {...getRootProps({className: \"dropzone\"})}>\r\n                        <input {...getInputProps()} />\r\n                        <p>\r\n                            Drag 'n' drop some files here, or click to select files and send to\r\n                            create animation\r\n                        </p>\r\n                        <em>(Only *.jpeg and *.png images will be accepted)</em>\r\n                    </div>\r\n                    <aside>\r\n                        <h4>Accepted files</h4>\r\n                        <ul>{acceptedFilesItems}</ul>\r\n                        <h4>Rejected files</h4>\r\n                        <ul>{rejectedFilesItems}</ul>\r\n                    </aside>\r\n                </section>\r\n                <button onClick={sendPhotos}>Send file</button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    return <div>{props.isAuthenticated ? homeTemplate() : blocked()}</div>;\r\n\r\n}\r\n","import React from 'react'\r\nimport AppliedRoute from \"./AppliedRoute\";\r\nimport {Switch, Route} from \"react-router-dom\"\r\nimport NotFound from './NotFound';\r\nimport SignInForm from \"./login/SignInForm\";\r\nimport SignUpForm from \"./register/SignUpForm\";\r\nimport Home from './Home/Home';\r\n\r\nexport default ({childProps}) => (\r\n    <Switch>\r\n        <AppliedRoute path=\"/home\" exact component={Home} props={childProps}/>\r\n        <AppliedRoute path=\"/\" exact component={SignInForm} props={childProps}/>\r\n        <AppliedRoute path=\"/register\" exact component={SignUpForm} props={childProps}/>\r\n        {/* Finally, catch all unmatched routes */}\r\n        <Route component={NotFound}/>\r\n    </Switch>\r\n);\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction MadeWithLove() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Check project on my '}\r\n            <Link color=\"inherit\" href=\"https://github.com/insomnia1337/aws-project\">\r\n                {'Github'}\r\n            </Link>\r\n\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(2),\r\n        marginTop: '400px',\r\n        backgroundColor: 'white',\r\n    },\r\n}));\r\n\r\nexport default function StickyFooter() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <Container maxWidth=\"sm\">\r\n                <Typography variant=\"body1\">2019 Kraków</Typography>\r\n                <MadeWithLove/>\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport NavBar from \"./components/navbar\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Routes from \"./components/Routes\";\r\nimport Auth from './components/auth/Auth'\r\nimport AWS from \"aws-sdk\";\r\nimport { CognitoUserPool } from \"amazon-cognito-identity-js\";\r\nimport { poolData, identityPoolId, region, bucketRegion, bucketName } from './env.js';\r\nimport StickyFooter from \"./components/footer/footer\";\r\nconst userPool = new CognitoUserPool(poolData);\r\n\r\n\r\nconst creds = new AWS.CognitoIdentityCredentials({\r\n    IdentityPoolId: identityPoolId\r\n});\r\n\r\nAWS.config.update({\r\n    region: region,\r\n    credentials: creds\r\n});\r\n\r\nconst auth = new Auth(userPool, creds);\r\n\r\n export default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isAuthenticated: false\r\n    };\r\n  }\r\n\r\n  userHasAuthenticated = authenticated => {\r\n    this.setState({\r\n      isAuthenticated: authenticated\r\n    });\r\n  };\r\n\r\n  handleLogout = async event => {\r\n    debugger;\r\n    await auth.logOut();\r\n    this.userHasAuthenticated(false);\r\n    debugger;\r\n  };\r\n\r\n  render() {\r\n    const childProps = {\r\n      isAuthenticated: this.state.isAuthenticated,\r\n      userHasAuthenticated: this.userHasAuthenticated\r\n    };\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <NavBar\r\n            handleLogout={this.handleLogout}\r\n            isAuthenticated={this.state.isAuthenticated}\r\n          />\r\n          <Routes childProps={childProps} />\r\n        </Router>\r\n          <StickyFooter/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {CognitoUserPool} from \"amazon-cognito-identity-js\";\r\nimport AWS from \"aws-sdk\";\r\nimport {\r\n    poolData,\r\n    identityPoolId,\r\n    region,\r\n    bucketRegion,\r\n    bucketName\r\n} from \"./env.js\";\r\nimport Auth from \"./components/auth/Auth\";\r\n\r\n\r\nconst userPool = new CognitoUserPool(poolData);\r\nconst creds = new AWS.CognitoIdentityCredentials({\r\n    IdentityPoolId: identityPoolId\r\n});\r\n\r\nAWS.config.update({\r\n    region: region,\r\n    credentials: creds\r\n});\r\n\r\nconst s3 = new AWS.S3({\r\n    apiVersion: \"2006-03-01\",\r\n    region: bucketRegion,\r\n    params: {\r\n        Bucket: bucketName\r\n    }\r\n});\r\n\r\nconst auth = new Auth(userPool, creds);\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}